/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Classes.SocketController;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author GOMEZ
 */
public class MainView extends javax.swing.JFrame {
    SocketController socketCtrl = null;
    DefaultListModel modelListPublicMessages;
    DefaultListModel modelListPrivateMessages;
    DefaultListModel modelListUsers;
    String messageTemporal;
    String clientToSend;
    /**
     * Creates new form MainView
     */
    public MainView() {
        modelListPublicMessages = new DefaultListModel();
        modelListPrivateMessages = new DefaultListModel();
        modelListUsers = new DefaultListModel();
        try {
            socketCtrl = new SocketController("127.0.0.1", 23000);
            
            initComponents();
            initStreamThread();
            initRegister();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this,"Ha ocurrido un error al conectar al servidor");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listPublicMessages = new javax.swing.JList<>();
        txtFieldPublicMessage = new javax.swing.JTextField();
        btnSendPublicMessage = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listPrivateMessages = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        txtFieldPrivateMessage = new javax.swing.JTextField();
        btnSendPrivateMessage = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtNameClientToSend = new javax.swing.JLabel();
        txtNameClient = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        JListUsers = new javax.swing.JList<>();
        txtConnectUsers = new javax.swing.JLabel();
        btnCloseWindow = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 153, 153));
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Lucida Sans", 0, 18)); // NOI18N
        jLabel1.setText("MENSAJES PÃšBLICOS");

        listPublicMessages.setSelectionBackground(new java.awt.Color(0, 123, 215));
        jScrollPane1.setViewportView(listPublicMessages);

        btnSendPublicMessage.setFont(new java.awt.Font("Lucida Sans", 0, 11)); // NOI18N
        btnSendPublicMessage.setText("Enviar");
        btnSendPublicMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendPublicMessageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(btnSendPublicMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtFieldPublicMessage, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE))
                    .addComponent(jLabel1))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtFieldPublicMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSendPublicMessage)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane2.setViewportView(listPrivateMessages);

        jLabel2.setFont(new java.awt.Font("Lucida Sans", 0, 18)); // NOI18N
        jLabel2.setText("MENSAJES PRIVADOS");

        btnSendPrivateMessage.setFont(new java.awt.Font("Lucida Sans", 0, 11)); // NOI18N
        btnSendPrivateMessage.setText("Enviar");
        btnSendPrivateMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendPrivateMessageActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Lucida Sans", 0, 11)); // NOI18N
        jLabel4.setText("SELECCIONE UN USUARIO");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(107, 107, 107)
                                .addComponent(txtNameClientToSend, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtFieldPrivateMessage)
                            .addComponent(btnSendPrivateMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(116, 116, 116))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(7, 7, 7)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFieldPrivateMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSendPrivateMessage)
                        .addGap(20, 20, 20))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtNameClientToSend, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        txtNameClient.setFont(new java.awt.Font("Lucida Sans", 0, 18)); // NOI18N
        txtNameClient.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtNameClient.setText("NOMBRE");
        txtNameClient.setAlignmentX(0.5F);
        txtNameClient.setFocusable(false);
        txtNameClient.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel5.setFont(new java.awt.Font("Lucida Sans", 0, 11)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Nombre de Usuario");

        JListUsers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JListUsersMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(JListUsers);

        txtConnectUsers.setFont(new java.awt.Font("Lucida Sans", 0, 11)); // NOI18N
        txtConnectUsers.setText("Usuarios Conectados");

        btnCloseWindow.setFont(new java.awt.Font("Lucida Sans", 0, 11)); // NOI18N
        btnCloseWindow.setLabel("Cerrar SesiÃ³n");
        btnCloseWindow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseWindowActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(489, 489, 489)
                        .addComponent(txtConnectUsers)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(457, 457, 457)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNameClient, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCloseWindow, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(340, 340, 340))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(txtConnectUsers)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNameClient)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCloseWindow)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSendPublicMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendPublicMessageActionPerformed
        String publicMessage = txtFieldPublicMessage.getText();
        messageTemporal = "Tu: "+publicMessage;
        this.socketCtrl.writeText("SENDALL "+publicMessage);
    }//GEN-LAST:event_btnSendPublicMessageActionPerformed

    private void btnCloseWindowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseWindowActionPerformed
        try {
            socketCtrl.close();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Error al cerrar sesion del socket");
        } 
    }//GEN-LAST:event_btnCloseWindowActionPerformed

    private void btnSendPrivateMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendPrivateMessageActionPerformed
        String privateMessage = txtFieldPrivateMessage.getText();
        if(clientToSend != null){
            messageTemporal = "Tu a "+clientToSend+": "+privateMessage;
            this.socketCtrl.writeText("SEND "+clientToSend+" "+privateMessage);
        }
    }//GEN-LAST:event_btnSendPrivateMessageActionPerformed

    private void JListUsersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JListUsersMouseClicked
        clientToSend = JListUsers.getSelectedValue();
        txtNameClientToSend.setText("Enviar mensaje a: "+clientToSend);
    }//GEN-LAST:event_JListUsersMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> JListUsers;
    private javax.swing.JButton btnCloseWindow;
    private javax.swing.JButton btnSendPrivateMessage;
    private javax.swing.JButton btnSendPublicMessage;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<String> listPrivateMessages;
    private javax.swing.JList<String> listPublicMessages;
    private javax.swing.JLabel txtConnectUsers;
    private javax.swing.JTextField txtFieldPrivateMessage;
    private javax.swing.JTextField txtFieldPublicMessage;
    private javax.swing.JLabel txtNameClient;
    private javax.swing.JLabel txtNameClientToSend;
    // End of variables declaration//GEN-END:variables

    private void initStreamThread() {
        socketCtrl.start(() -> {
               String text = null;
               
               while(socketCtrl.isActive()){
                   
                   try {
                       Thread.sleep(500);
                       text = socketCtrl.readText();
                       System.out.println(text);
                       //Tomar decision en base al codigo entrante
                       if(text != null){
                        doAction(text);
                       }
                   } catch (InterruptedException ex) {
                       Logger.getLogger(MainView.class.getName()).log(Level.SEVERE, null, ex);
                   }
               }
               
            });
    }

    private void doAction(String text) {
        String code = text.substring(0,4);
        String substring = text.substring(5);
        switch(code){
            case("1000"):
                txtNameClient.setText(socketCtrl.getNameClient());
                socketCtrl.writeText("GETUSERNAMES");
                break;
            case("1001"):
                JOptionPane.showMessageDialog(this, "Usuario invÃ¡lido");
                this.initRegister();
                break;
            case("1002"):
                JOptionPane.showMessageDialog(this, "Usuario ya existe");
                this.initRegister();
                break;
            case("1003"):
                JOptionPane.showMessageDialog(this, "Usuario ya estÃ¡ registrado");
                this.initRegister();
                break;
            case("2000"):
                modelListPublicMessages.add(modelListPublicMessages.size(),messageTemporal);
                this.listPublicMessages.setModel(modelListPublicMessages);
                break;
            case("2001"):
                JOptionPane.showMessageDialog(this, "Mensaje no enviado");
                break;
            case("2010"):
                modelListPublicMessages.add(modelListPublicMessages.size(),substring);
                this.listPublicMessages.setModel(modelListPublicMessages);
                break;
            case("4000"):
                modelListPrivateMessages.add(modelListPrivateMessages.size(),messageTemporal);
                this.listPrivateMessages.setModel(modelListPrivateMessages);
                break;
            case("4001"):
                JOptionPane.showMessageDialog(this, "Hubo un error al enviar el mensaje");
                break;
            case("4010"):
                modelListPrivateMessages.add(modelListPrivateMessages.size(),substring);
                this.listPrivateMessages.setModel(modelListPrivateMessages);
                break;
            case("5000"):
                if(substring != ""){
                    String[] listString = substring.split(";");
                    modelListUsers.clear();
                    for(int i = 0 ; i < listString.length;i++){
                        if(listString[i].equals(txtNameClient.getText()))continue;
                        modelListUsers.add(modelListUsers.size(),listString[i]);
                        this.JListUsers.setModel(modelListUsers);
                    }
                }
                refreshDataClient();
                break;
            case("3000"):
                    txtConnectUsers.setText("Usuarios conectados "+substring);
                break;
            case("5001"):
                    modelListUsers.clear();
                    modelListUsers.add(0,"No hay usuarios activos");
                    txtConnectUsers.setText("Usuarios conectados 0");
                break;
            
        }
        
        
    }

    private void initRegister() {
        String userName = JOptionPane.showInputDialog("Registrese con su nombre de usuario");
        this.socketCtrl.writeText("REGISTER "+userName);
    }

    private void refreshDataClient() {
        socketCtrl.writeText("NUMOFUSERS");
    }
}
